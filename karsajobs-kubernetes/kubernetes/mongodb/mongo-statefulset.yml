apiVersion: apps/v1 # version of Kubernetes API
kind: StatefulSet # define a StatefulSet object
metadata: # define metadata for the StatefulSet object
  name: mongodb # sets the name of the StatefulSet object as "mongodb"
  labels: # sets the labels for the StatefulSet object with the label "app" set as "mongodb"
    app: mongodb
spec: # defines the specification of the StatefulSet object
  selector: # sets the label selector to target pods with the label "app" set as "mongodb" and the label "tier" set as "database
    matchLabels:
      app: mongodb
      tier: database
  serviceName: mongodb # sets the name of the Service object as "mongodb"
  replicas: 1 # sets the number of replicas to 1
  minReadySeconds: 10 # sets the minimum number of seconds for the StatefulSet object to be ready
  template: # defines the template for the StatefulSet object
    metadata: # defines metadata for the template
      labels: # sets the labels for the template with the label "app" set as "mongodb" and the label "tier" set as "database"
        app: mongodb
        tier: database
    spec: # defines the specification of the template
      terminationGracePeriodSeconds: 10 # sets the termination grace period to 10 seconds
      containers:
      - image: mongo:latest # sets the image for the container as "mongo:latest"
        name: mongodb # sets the name of the container as "mongodb"
        imagePullPolicy: IfNotPresent # sets the image pull policy for the container to IfNotPresent
        env: # sets the environment variables for the container
          - name: MONGO_INITDB_ROOT_USERNAME_FILE
            value: /etc/mongo-credentials/MONGO_ROOT_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: /etc/mongo-credentials/MONGO_ROOT_PASSWORD
        ports: # sets the ports for the container with the port 27017
          - containerPort: 27017
            name: mongodb
        volumeMounts: # sets the volume mounts for the container
          - name: mongodb-persistent-storage # sets the name of the volume mount as "mongodb-persistent-storage"
            mountPath: /data/db # sets the mount path for the volume mount as "/data/db"
          - name: mongodb-secret-mount # sets the name of the volume mount as "mongodb-secret-mount"
            mountPath: /etc/mongo-credentials # sets the mount path for the volume mount as "/etc/mongo-credentials"
          - name: mongodb-config-mount # sets the name of the volume mount as "mongodb-config-mount"
            mountPath: /config # sets the mount path for the volume mount as "/config"
            readOnly: true # sets the volume mount to read only
      volumes: # sets the volumes for the StatefulSet object
        - name: mongodb-persistent-storage # sets the name of the volume as "mongodb-persistent-storage"
          persistentVolumeClaim: # sets the persistent volume claim for the volume as "mongodb-pv-claim"
            claimName: mongodb-pv-claim
        - name: mongodb-secret-mount # sets the name of the volume as "mongodb-secret-mount"
          secret: # sets the secret for the volume as "mongodb-secret"
            secretName: mongodb-secret
        - name: mongodb-config-mount # sets the name of the volume as "mongodb-config-mount"
          configMap: # sets the config map for the volume as "mongodb-config"
            name: mongodb-config
            items: # sets the items for the config map
              - key: mongo.conf
                path: mongo.conf
